import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbList, BreadcrumbPage, BreadcrumbSeparator } from '@/components/ui/breadcrumb';
import { Search, BookOpen, Star, ThumbsUp, ThumbsDown, Share2, Printer, ArrowLeft, User, Calendar, Eye, MessageSquare } from 'lucide-react';

interface Article {
  id: string;
  title: string;
  content: string;
  category: string;
  views: number;
  likes: number;
  dislikes: number;
  author: string;
  publishDate: string;
  lastUpdated: string;
  tags: string[];
  helpful: boolean | null;
}

interface Category {
  id: string;
  name: string;
  description: string;
  icon: string;
  articleCount: number;
  color: string;
}

const PublicKnowledgeBase = () => {
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);
  const [selectedArticle, setSelectedArticle] = useState<Article | null>(null);
  const [userRating, setUserRating] = useState<boolean | null>(null);

  const categories: Category[] = [
    {
      id: '1',
      name: '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã',
      description: '–û—Å–Ω–æ–≤—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã',
      icon: 'üöÄ',
      articleCount: 12,
      color: 'bg-blue-100 text-blue-800'
    },
    {
      id: '2',
      name: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞–º–∏',
      description: '–†–∞–±–æ—Ç–∞ —Å –æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏',
      icon: 'üé´',
      articleCount: 25,
      color: 'bg-green-100 text-green-800'
    },
    {
      id: '3',
      name: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏',
      description: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤',
      icon: 'üîó',
      articleCount: 18,
      color: 'bg-purple-100 text-purple-800'
    },
    {
      id: '4',
      name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
      description: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã',
      icon: '‚öôÔ∏è',
      articleCount: 15,
      color: 'bg-orange-100 text-orange-800'
    },
    {
      id: '5',
      name: '–û—Ç—á–µ—Ç—ã',
      description: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏',
      icon: 'üìä',
      articleCount: 10,
      color: 'bg-pink-100 text-pink-800'
    },
    {
      id: '6',
      name: '–£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫',
      description: '–†–µ—à–µ–Ω–∏–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º',
      icon: 'üîß',
      articleCount: 20,
      color: 'bg-red-100 text-red-800'
    }
  ];

  const popularArticles: Article[] = [
    {
      id: '1',
      title: '–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π —Ç–∏–∫–µ—Ç',
      content: `# –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π —Ç–∏–∫–µ—Ç

–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞ - —ç—Ç–æ –æ—Å–Ω–æ–≤–∞ —Ä–∞–±–æ—Ç—ã –≤ —Å–∏—Å—Ç–µ–º–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –í —ç—Ç–æ–π —Å—Ç–∞—Ç—å–µ –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø–æ—à–∞–≥–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –≤–∞—à–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ —Ç–∏–∫–µ—Ç–∞.

## –®–∞–≥ 1: –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É, –∏—Å–ø–æ–ª—å–∑—É—è –≤–∞—à–∏ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.

## –®–∞–≥ 2: –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–∞–∑–¥–µ–ª—É —Ç–∏–∫–µ—Ç–æ–≤
–í –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª "–¢–∏–∫–µ—Ç—ã" –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç".

## –®–∞–≥ 3: –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è:
- **–¢–µ–º–∞** - –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
- **–û–ø–∏—Å–∞–Ω–∏–µ** - –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
- **–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç** - –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å
- **–ö–∞—Ç–µ–≥–æ—Ä–∏—è** - –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é

## –®–∞–≥ 4: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–ª–æ–∂–µ–Ω–∏–π
–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª—ã, —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –∏–ª–∏ –¥—Ä—É–≥–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã.

## –®–∞–≥ 5: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–∏–∫–µ—Ç–∞
–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç".

–ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è.`,
      category: '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã',
      views: 1250,
      likes: 45,
      dislikes: 3,
      author: '–ê–Ω–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞',
      publishDate: '2024-01-15',
      lastUpdated: '2024-01-20',
      tags: ['—Ç–∏–∫–µ—Ç—ã', '–Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã', '—Å–æ–∑–¥–∞–Ω–∏–µ'],
      helpful: null
    },
    {
      id: '2',
      title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
      content: `# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –Ω–æ–≤—ã–µ –æ–±—Ä–∞—â–µ–Ω–∏—è.

## –¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

### Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–∞ –≤–∞—à—É —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É:
- –ù–æ–≤—ã–µ —Ç–∏–∫–µ—Ç—ã
- –û–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
- –≠—Å–∫–∞–ª–∞—Ü–∏—è —Ç–∏–∫–µ—Ç–æ–≤

### Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
–í–∫–ª—é—á–∏—Ç–µ –±—Ä–∞—É–∑–µ—Ä–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞–∂–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.

### SMS —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
–ù–∞—Å—Ç—Ä–æ–π—Ç–µ SMS –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π.

## –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å

1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è"
2. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∫–ª–∞–¥–∫—É "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è

–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π, —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤.`,
      category: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
      views: 980,
      likes: 32,
      dislikes: 1,
      author: '–ú–∏—Ö–∞–∏–ª –ü–µ—Ç—Ä–æ–≤',
      publishDate: '2024-01-10',
      lastUpdated: '2024-01-18',
      tags: ['—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏', 'email'],
      helpful: null
    }
  ];

  const handleSearch = (query: string) => {
    setSearchQuery(query);
    setSelectedCategory(null);
  };

  const handleCategorySelect = (categoryId: string) => {
    setSelectedCategory(categoryId);
    setSearchQuery('');
  };

  const handleArticleSelect = (article: Article) => {
    setSelectedArticle(article);
    // Increment view count
    article.views += 1;
  };

  const handleRating = (helpful: boolean) => {
    setUserRating(helpful);
    if (selectedArticle) {
      if (helpful) {
        selectedArticle.likes += 1;
      } else {
        selectedArticle.dislikes += 1;
      }
    }
  };

  const handleShare = () => {
    if (selectedArticle) {
      navigator.clipboard.writeText(window.location.href);
      // You could show a toast notification here
    }
  };

  const handlePrint = () => {
    window.print();
  };

  const filteredArticles = popularArticles.filter(article => {
    const matchesSearch = searchQuery === '' || 
      article.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
      article.content.toLowerCase().includes(searchQuery.toLowerCase());
    
    const matchesCategory = selectedCategory === null || 
      article.category === categories.find(c => c.id === selectedCategory)?.name;
    
    return matchesSearch && matchesCategory;
  });

  if (selectedArticle) {
    return (
      <div className="min-h-screen bg-background">
        <div className="container mx-auto p-6 max-w-4xl">
          <div className="mb-6">
            <Button 
              variant="ghost" 
              onClick={() => setSelectedArticle(null)}
              className="mb-4"
            >
              <ArrowLeft className="mr-2 h-4 w-4" />
              –ù–∞–∑–∞–¥ –∫ —Å—Ç–∞—Ç—å—è–º
            </Button>
            
            <Breadcrumb>
              <BreadcrumbList>
                <BreadcrumbItem>
                  <BreadcrumbLink href="#" onClick={() => setSelectedArticle(null)}>
                    –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π
                  </BreadcrumbLink>
                </BreadcrumbItem>
                <BreadcrumbSeparator />
                <BreadcrumbItem>
                  <BreadcrumbLink href="#" onClick={() => setSelectedCategory(selectedArticle.category)}>
                    {selectedArticle.category}
                  </BreadcrumbLink>
                </BreadcrumbItem>
                <BreadcrumbSeparator />
                <BreadcrumbItem>
                  <BreadcrumbPage>{selectedArticle.title}</BreadcrumbPage>
                </BreadcrumbItem>
              </BreadcrumbList>
            </Breadcrumb>
          </div>

          <Card>
            <CardHeader>
              <div className="flex items-start justify-between">
                <div className="space-y-2">
                  <CardTitle className="text-2xl">{selectedArticle.title}</CardTitle>
                  <div className="flex items-center space-x-4 text-sm text-muted-foreground">
                    <div className="flex items-center space-x-1">
                      <User className="h-4 w-4" />
                      <span>{selectedArticle.author}</span>
                    </div>
                    <div className="flex items-center space-x-1">
                      <Calendar className="h-4 w-4" />
                      <span>–û–±–Ω–æ–≤–ª–µ–Ω–æ: {selectedArticle.lastUpdated}</span>
                    </div>
                    <div className="flex items-center space-x-1">
                      <Eye className="h-4 w-4" />
                      <span>{selectedArticle.views} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</span>
                    </div>
                  </div>
                  <div className="flex items-center space-x-2">
                    {selectedArticle.tags.map((tag) => (
                      <Badge key={tag} variant="secondary">
                        {tag}
                      </Badge>
                    ))}
                  </div>
                </div>
                <div className="flex items-center space-x-2">
                  <Button variant="outline" size="sm" onClick={handleShare}>
                    <Share2 className="h-4 w-4" />
                  </Button>
                  <Button variant="outline" size="sm" onClick={handlePrint}>
                    <Printer className="h-4 w-4" />
                  </Button>
                </div>
              </div>
            </CardHeader>
            <CardContent>
              <div className="prose max-w-none">
                <div dangerouslySetInnerHTML={{ __html: selectedArticle.content.replace(/\n/g, '<br>') }} />
              </div>
              
              <div className="mt-8 pt-6 border-t">
                <div className="flex items-center justify-between">
                  <div className="space-y-2">
                    <h4 className="font-medium">–ë—ã–ª–∞ –ª–∏ —ç—Ç–∞ —Å—Ç–∞—Ç—å—è –ø–æ–ª–µ–∑–Ω–æ–π?</h4>
                    <div className="flex items-center space-x-2">
                      <Button
                        variant={userRating === true ? "default" : "outline"}
                        size="sm"
                        onClick={() => handleRating(true)}
                      >
                        <ThumbsUp className="mr-2 h-4 w-4" />
                        –î–∞ ({selectedArticle.likes})
                      </Button>
                      <Button
                        variant={userRating === false ? "destructive" : "outline"}
                        size="sm"
                        onClick={() => handleRating(false)}
                      >
                        <ThumbsDown className="mr-2 h-4 w-4" />
                        –ù–µ—Ç ({selectedArticle.dislikes})
                      </Button>
                    </div>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-background">
      <div className="container mx-auto p-6">
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold mb-4">–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π</h1>
          <p className="text-xl text-muted-foreground mb-6">
            –ù–∞–π–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ –∏–∑—É—á–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
          </p>
          
          {/* Search */}
          <div className="max-w-md mx-auto">
            <div className="relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
              <Input
                placeholder="–ü–æ–∏—Å–∫ –ø–æ —Å—Ç–∞—Ç—å—è–º..."
                value={searchQuery}
                onChange={(e) => handleSearch(e.target.value)}
                className="pl-10"
              />
            </div>
          </div>
        </div>

        {/* Categories */}
        <div className="mb-8">
          <h2 className="text-2xl font-bold mb-4">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {categories.map((category) => (
              <Card 
                key={category.id} 
                className="hover:shadow-md transition-shadow cursor-pointer"
                onClick={() => handleCategorySelect(category.id)}
              >
                <CardHeader>
                  <div className="flex items-center space-x-3">
                    <div className="text-2xl">{category.icon}</div>
                    <div>
                      <CardTitle className="text-lg">{category.name}</CardTitle>
                      <CardDescription>{category.description}</CardDescription>
                    </div>
                  </div>
                </CardHeader>
                <CardContent>
                  <Badge className={category.color}>
                    {category.articleCount} —Å—Ç–∞—Ç–µ–π
                  </Badge>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>

        {/* Articles */}
        <div>
          <div className="flex items-center justify-between mb-4">
            <h2 className="text-2xl font-bold">
              {selectedCategory 
                ? `–°—Ç–∞—Ç—å–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${categories.find(c => c.id === selectedCategory)?.name}"`
                : searchQuery 
                  ? `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ "${searchQuery}"`
                  : '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç–∞—Ç—å–∏'
              }
            </h2>
            {(selectedCategory || searchQuery) && (
              <Button 
                variant="outline" 
                onClick={() => {
                  setSelectedCategory(null);
                  setSearchQuery('');
                }}
              >
                –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ
              </Button>
            )}
          </div>
          
          <div className="grid gap-4">
            {filteredArticles.map((article) => (
              <Card 
                key={article.id} 
                className="hover:shadow-md transition-shadow cursor-pointer"
                onClick={() => handleArticleSelect(article)}
              >
                <CardHeader>
                  <div className="flex items-start justify-between">
                    <div>
                      <CardTitle className="text-lg">{article.title}</CardTitle>
                      <CardDescription className="mt-2">
                        {article.content.substring(0, 150).replace(/[#*]/g, '')}...
                      </CardDescription>
                    </div>
                    <Badge variant="secondary">{article.category}</Badge>
                  </div>
                </CardHeader>
                <CardContent>
                  <div className="flex items-center justify-between text-sm text-muted-foreground">
                    <div className="flex items-center space-x-4">
                      <div className="flex items-center space-x-1">
                        <Eye className="h-4 w-4" />
                        <span>{article.views}</span>
                      </div>
                      <div className="flex items-center space-x-1">
                        <ThumbsUp className="h-4 w-4" />
                        <span>{article.likes}</span>
                      </div>
                      <div className="flex items-center space-x-1">
                        <User className="h-4 w-4" />
                        <span>{article.author}</span>
                      </div>
                    </div>
                    <span>{article.lastUpdated}</span>
                  </div>
                  <div className="flex items-center space-x-2 mt-2">
                    {article.tags.map((tag) => (
                      <Badge key={tag} variant="outline" className="text-xs">
                        {tag}
                      </Badge>
                    ))}
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
          
          {filteredArticles.length === 0 && (
            <div className="text-center py-12">
              <BookOpen className="mx-auto h-12 w-12 text-muted-foreground mb-4" />
              <h3 className="text-lg font-medium mb-2">–°—Ç–∞—Ç—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
              <p className="text-muted-foreground">
                {searchQuery || selectedCategory 
                  ? '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é'
                  : '–í –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç —Å—Ç–∞—Ç–µ–π'
                }
              </p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default PublicKnowledgeBase;