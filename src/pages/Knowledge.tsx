import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import { Textarea } from "@/components/ui/textarea";
import { 
  Search, 
  Plus, 
  BookOpen,
  FileText,
  Folder,
  Eye,
  Edit,
  Star,
  ChevronRight,
  TrendingUp,
  Users,
  Clock,
  ThumbsUp
} from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import { useState } from "react";

interface Article {
  id: string;
  title: string;
  content: string;
  categoryId: string;
  views: number;
  likes: number;
  lastUpdated: Date;
  author: string;
}

interface Category {
  id: string;
  name: string;
  description: string;
  parentId?: string;
  articlesCount: number;
  icon: string;
}

const Knowledge = () => {
  const { toast } = useToast();
  const [searchQuery, setSearchQuery] = useState("");
  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);
  const [filteredArticles, setFilteredArticles] = useState<Article[]>([]);

  const categories: Category[] = [
    {
      id: "auth",
      name: "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
      description: "–ü—Ä–æ–±–ª–µ–º—ã –≤—Ö–æ–¥–∞, —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª–µ–π, –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è",
      articlesCount: 12,
      icon: "üîê"
    },
    {
      id: "billing",
      name: "–ë–∏–ª–ª–∏–Ω–≥ –∏ –ø–ª–∞—Ç–µ–∂–∏", 
      description: "–í–æ–ø—Ä–æ—Å—ã –æ–ø–ª–∞—Ç—ã, —Ç–∞—Ä–∏—Ñ—ã, –≤–æ–∑–≤—Ä–∞—Ç—ã —Å—Ä–µ–¥—Å—Ç–≤",
      articlesCount: 8,
      icon: "üí≥"
    },
    {
      id: "technical",
      name: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã",
      description: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏, API, –±–∞–≥–∏",
      articlesCount: 24,
      icon: "‚öôÔ∏è"
    },
    {
      id: "account",
      name: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–º",
      description: "–ü—Ä–æ—Ñ–∏–ª—å, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
      articlesCount: 15,
      icon: "üë§"
    },
    {
      id: "features",
      name: "–§—É–Ω–∫—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã",
      description: "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã",
      articlesCount: 18,
      icon: "üöÄ"
    }
  ];

  const popularArticles: Article[] = [
    {
      id: "1",
      title: "–ö–∞–∫ —Å–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ",
      content: "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–∫–∫–∞—É–Ω—Ç—É...",
      categoryId: "auth",
      views: 1247,
      likes: 89,
      lastUpdated: new Date("2024-01-10"),
      author: "–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞"
    },
    {
      id: "2", 
      title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏",
      content: "–ü–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ 2FA –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...",
      categoryId: "auth",
      views: 892,
      likes: 156,
      lastUpdated: new Date("2024-01-12"),
      author: "–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤"
    },
    {
      id: "3",
      title: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram Bot API",
      content: "–ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Telegram –±–æ—Ç–∞...",
      categoryId: "technical",
      views: 2341,
      likes: 234,
      lastUpdated: new Date("2024-01-08"),
      author: "–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤"
    },
    {
      id: "4",
      title: "–¢–∞—Ä–∏—Ñ—ã –∏ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã",
      content: "–û–±–∑–æ—Ä –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤ –∏ –º–µ—Ç–æ–¥–æ–≤ –æ–ø–ª–∞—Ç—ã...",
      categoryId: "billing",
      views: 756,
      likes: 67,
      lastUpdated: new Date("2024-01-14"),
      author: "–ï–ª–µ–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞"
    }
  ];

  const recentArticles: Article[] = [
    {
      id: "5",
      title: "–ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤ –≤–µ—Ä—Å–∏–∏ 2.4",
      content: "–û–±–∑–æ—Ä –Ω–æ–≤–æ–≤–≤–µ–¥–µ–Ω–∏–π –∏ —É–ª—É—á—à–µ–Ω–∏–π –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏...",
      categoryId: "features",
      views: 234,
      likes: 45,
      lastUpdated: new Date("2024-01-15"),
      author: "–ò–≤–∞–Ω –¢–µ—Å—Ç–æ–≤"
    },
    {
      id: "6",
      title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞—Ö",
      content: "–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫–∞–Ω–∞–ª—ã...",
      categoryId: "features",
      views: 123,
      likes: 23,
      lastUpdated: new Date("2024-01-14"),
      author: "–ê–Ω–Ω–∞ –ù–æ–≤–∏–∫–æ–≤–∞"
    }
  ];

  const handleCreateArticle = () => {
    toast({
      title: "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ üìù",
      description: "–û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Ä–µ–¥–∞–∫—Ç–æ—Ä —Å—Ç–∞—Ç–µ–π (–¥–µ–º–æ —Ñ—É–Ω–∫—Ü–∏—è)",
    });
  };

  const handleViewArticle = (article: Article) => {
    toast({
      title: "–ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—å–∏ üëÅÔ∏è",
      description: `–û—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å—Ç–∞—Ç—å—è "${article.title}" (–¥–µ–º–æ —Ñ—É–Ω–∫—Ü–∏—è)`,
    });
  };

  const handleCategoryClick = (categoryId: string) => {
    setSelectedCategory(categoryId);
    const categoryArticles = [...popularArticles, ...recentArticles].filter(
      article => article.categoryId === categoryId
    );
    setFilteredArticles(categoryArticles);
    toast({
      title: "–§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
      description: `–ü–æ–∫–∞–∑–∞–Ω—ã —Å—Ç–∞—Ç—å–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${categories.find(cat => cat.id === categoryId)?.name}"`,
    });
  };

  const handleSearch = () => {
    if (!searchQuery.trim()) return;
    
    const searchResults = [...popularArticles, ...recentArticles].filter(
      article =>
        article.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
        article.content.toLowerCase().includes(searchQuery.toLowerCase())
    );
    setFilteredArticles(searchResults);
    setSelectedCategory(null);
    toast({
      title: "–ü–æ–∏—Å–∫",
      description: `–ù–∞–π–¥–µ–Ω–æ ${searchResults.length} —Å—Ç–∞—Ç–µ–π –ø–æ –∑–∞–ø—Ä–æ—Å—É "${searchQuery}"`,
    });
  };

  const clearFilters = () => {
    setSelectedCategory(null);
    setFilteredArticles([]);
    setSearchQuery("");
  };

  return (
    <div className="p-6 space-y-6 h-full overflow-y-auto">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex justify-between items-center">
        <div>
          <h1 className="text-3xl font-bold">–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π</h1>
          <p className="text-muted-foreground">
            –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∑–Ω–∞–Ω–∏–π –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π ‚Ä¢ –î–µ–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç
          </p>
        </div>
        <div className="flex gap-2">
          <Button variant="outline" size="sm">
            <Search className="h-4 w-4 mr-2" />
            –ü–æ–∏—Å–∫
          </Button>
          <Button className="btn-gradient" onClick={handleCreateArticle}>
            <Plus className="h-4 w-4 mr-2" />
            –°–æ–∑–¥–∞—Ç—å —Å—Ç–∞—Ç—å—é
          </Button>
        </div>
      </div>

      {/* –ü–æ–∏—Å–∫ */}
      <Card className="bg-gradient-to-br from-card to-card/50">
        <CardContent className="p-6">
          <div className="relative">
            <Search className="absolute left-3 top-3 h-5 w-5 text-muted-foreground" />
            <Input 
              placeholder="–ü–æ–∏—Å–∫ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É —Å—Ç–∞—Ç–µ–π..." 
              className="pl-12 h-12 text-lg"
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              onKeyPress={(e) => e.key === 'Enter' && handleSearch()}
            />
            <Button 
              className="absolute right-2 top-2 h-8"
              onClick={handleSearch}
            >
              –ù–∞–π—Ç–∏
            </Button>
          </div>
          <div className="flex gap-2 mt-4">
            <Badge 
              variant={selectedCategory === null && filteredArticles.length === 0 ? "default" : "outline"} 
              className="cursor-pointer hover:bg-accent"
              onClick={clearFilters}
            >
              –í—Å–µ —Å—Ç–∞—Ç—å–∏
            </Badge>
            <Badge variant="outline" className="cursor-pointer hover:bg-accent">
              –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ
            </Badge>
            <Badge variant="outline" className="cursor-pointer hover:bg-accent">
              –ù–µ–¥–∞–≤–Ω–∏–µ
            </Badge>
            {selectedCategory && (
              <Badge variant="default">
                {categories.find(cat => cat.id === selectedCategory)?.name}
              </Badge>
            )}
          </div>
        </CardContent>
      </Card>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
        <Card className="bg-gradient-to-br from-card to-card/50">
          <CardContent className="p-4">
            <div className="flex items-center gap-3">
              <div className="p-2 rounded-lg bg-primary/20">
                <FileText className="h-5 w-5 text-primary" />
              </div>
              <div>
                <div className="text-lg font-bold">77</div>
                <div className="text-sm text-muted-foreground">–°—Ç–∞—Ç–µ–π</div>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-gradient-to-br from-card to-card/50">
          <CardContent className="p-4">
            <div className="flex items-center gap-3">
              <div className="p-2 rounded-lg bg-success/20">
                <Folder className="h-5 w-5 text-success" />
              </div>
              <div>
                <div className="text-lg font-bold">5</div>
                <div className="text-sm text-muted-foreground">–ö–∞—Ç–µ–≥–æ—Ä–∏–π</div>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-gradient-to-br from-card to-card/50">
          <CardContent className="p-4">
            <div className="flex items-center gap-3">
              <div className="p-2 rounded-lg bg-warning/20">
                <Eye className="h-5 w-5 text-warning" />
              </div>
              <div>
                <div className="text-lg font-bold">12.4k</div>
                <div className="text-sm text-muted-foreground">–ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</div>
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-gradient-to-br from-card to-card/50">
          <CardContent className="p-4">
            <div className="flex items-center gap-3">
              <div className="p-2 rounded-lg bg-destructive/20">
                <ThumbsUp className="h-5 w-5 text-destructive" />
              </div>
              <div>
                <div className="text-lg font-bold">1.8k</div>
                <div className="text-sm text-muted-foreground">–õ–∞–π–∫–æ–≤</div>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
        <Card className="lg:col-span-1 bg-gradient-to-br from-card to-card/50">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <BookOpen className="h-5 w-5 text-primary" />
              –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-3">
            {categories.map((category) => (
              <div 
                key={category.id} 
                className={`p-3 rounded-lg border border-border/50 hover:bg-accent/50 transition-colors cursor-pointer ${
                  selectedCategory === category.id ? 'bg-primary/10 border-primary/20' : 'bg-accent/30'
                }`}
                onClick={() => handleCategoryClick(category.id)}
              >
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-3">
                    <span className="text-xl">{category.icon}</span>
                    <div>
                      <div className="font-medium text-sm">{category.name}</div>
                      <div className="text-xs text-muted-foreground">{category.articlesCount} —Å—Ç–∞—Ç–µ–π</div>
                    </div>
                  </div>
                  <ChevronRight className="h-4 w-4 text-muted-foreground" />
                </div>
                <div className="text-xs text-muted-foreground mt-2">
                  {category.description}
                </div>
              </div>
            ))}
          </CardContent>
        </Card>

        {/* –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –∏–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ */}
        <Card className="lg:col-span-2 bg-gradient-to-br from-card to-card/50">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <TrendingUp className="h-5 w-5 text-primary" />
              {selectedCategory ? `–°—Ç–∞—Ç—å–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${categories.find(cat => cat.id === selectedCategory)?.name}` :
               filteredArticles.length > 0 ? '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞' : '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ç–∞—Ç—å–∏'}
              <Badge variant="secondary" className="ml-auto">
                {filteredArticles.length > 0 ? `${filteredArticles.length} —Å—Ç–∞—Ç–µ–π` : '–î–µ–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç'}
              </Badge>
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            {(filteredArticles.length > 0 ? filteredArticles : popularArticles).map((article) => (
              <div key={article.id} className="p-4 rounded-lg bg-accent/30 border border-border/50 hover:bg-accent/50 transition-colors">
                <div className="flex justify-between items-start mb-2">
                  <h4 className="font-medium">{article.title}</h4>
                  <Button variant="ghost" size="icon" onClick={() => handleViewArticle(article)}>
                    <Eye className="h-4 w-4" />
                  </Button>
                </div>
                <p className="text-sm text-muted-foreground mb-3 line-clamp-2">
                  {article.content}
                </p>
                <div className="flex items-center justify-between text-xs text-muted-foreground">
                  <div className="flex items-center gap-4">
                    <div className="flex items-center gap-1">
                      <Eye className="h-3 w-3" />
                      {article.views.toLocaleString()}
                    </div>
                    <div className="flex items-center gap-1">
                      <ThumbsUp className="h-3 w-3" />
                      {article.likes}
                    </div>
                    <div className="flex items-center gap-1">
                      <Users className="h-3 w-3" />
                      {article.author}
                    </div>
                  </div>
                  <div className="flex items-center gap-1">
                    <Clock className="h-3 w-3" />
                    {article.lastUpdated.toLocaleDateString('ru-RU')}
                  </div>
                </div>
              </div>
            ))}
            {filteredArticles.length === 0 && searchQuery && (
              <div className="text-center p-8 text-muted-foreground">
                <Search className="h-8 w-8 mx-auto mb-2" />
                <p>–ü–æ –∑–∞–ø—Ä–æ—Å—É "{searchQuery}" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
              </div>
            )}
          </CardContent>
        </Card>
      </div>

      {/* –ù–µ–¥–∞–≤–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ */}
      <Card className="bg-gradient-to-br from-card to-card/50">
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Clock className="h-5 w-5 text-primary" />
            –ù–µ–¥–∞–≤–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            {recentArticles.map((article) => (
              <div key={article.id} className="p-4 rounded-lg bg-accent/30 border border-border/50 hover:bg-accent/50 transition-colors">
                <div className="flex justify-between items-start mb-2">
                  <h4 className="font-medium">{article.title}</h4>
                  <Button variant="ghost" size="icon" onClick={() => handleViewArticle(article)}>
                    <Eye className="h-4 w-4" />
                  </Button>
                </div>
                <p className="text-sm text-muted-foreground mb-3">
                  {article.content}
                </p>
                <div className="flex items-center justify-between text-xs text-muted-foreground">
                  <div className="flex items-center gap-4">
                    <div className="flex items-center gap-1">
                      <Eye className="h-3 w-3" />
                      {article.views}
                    </div>
                    <div className="flex items-center gap-1">
                      <ThumbsUp className="h-3 w-3" />
                      {article.likes}
                    </div>
                  </div>
                  <Badge variant="outline" className="text-xs">
                    –ù–æ–≤–æ–µ
                  </Badge>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default Knowledge;